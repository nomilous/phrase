// Generated by CoffeeScript 1.6.3
var EventEmitter, Run,
  __slice = [].slice;

EventEmitter = require('events').EventEmitter;

Run = require('../runner/run');

exports.create = function(root) {
  var context, emitter, notice, tree;
  context = root.context;
  tree = context.tree, notice = context.notice;
  emitter = new EventEmitter;
  emitter.run = function() {
    var args, params, token;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    token = args[0], params = args[1];
    return Run.start(root, token, params);
  };
  notice.use({
    title: 'token emitter proxy'
  }, function(next, capsule) {
    if (capsule.phrase === 'phrase::recurse:end') {
      if (capsule.walk.first) {
        emitter.emit('ready', {
          walk: capsule.walk,
          tokens: capsule.tokens
        });
      } else {
        emitter.emit('changed', 'TODO: changed payload');
      }
    }
    return next();
  });
  return emitter;
};
