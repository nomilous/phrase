// Generated by CoffeeScript 1.6.3
var Notice, PhraseGraph, PhraseRecursor, PhraseToken;

Notice = require('notice');

PhraseToken = require('./phrase_token');

PhraseGraph = require('./graph/phrase_graph');

PhraseRecursor = require('./phrase/phrase_recursor');

require('also')(exports, {}, function(root) {
  var context, validate;
  context = root.context, validate = root.validate;
  context.graph = PhraseGraph.create(root);
  context.token = PhraseToken.create(root);
  context.stack = [];
  return {
    createRoot: validate.args({
      $address: 'phrase.createRoot',
      opts: {
        title: {},
        uuid: {},
        leaf: {
          $default: ['end'],
          $description: "\nThis specifies an array of possible phraseFn arg1 signature names \nthat are used to determine if the phrase function is a leaf.\n\n    eg. \n\n    phraseRegistrar 'phrase text', (end) -> \n\n        # \n        # this is a leaf function\n        # \n"
        }
      },
      linkFn: {
        $type: Function,
        $description: "\nThis callback is called immediately upon initialization of the\nphrase root. It receives the phrase tree access token and a\nmiddleware registrar that enables tapping into the chatter \ntraversing the phrase tree's internal message bus.\n"
      }
    }, function(opts, linkFn) {
      context.notice = Notice.create(opts.uuid);
      context.notice.use(context.graph.assembler);
      context.notice.use(context.token.eventProxy);
      linkFn(context.token, context.notice);
      return PhraseRecursor.create(root, opts);
    })
  };
});
