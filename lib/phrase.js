// Generated by CoffeeScript 1.6.3
var EventEmitter;

EventEmitter = require('events').EventEmitter;

require('also')(exports, {}, function(root) {
  var context, validate;
  context = root.context, validate = root.validate;
  context.stack = [];
  context.emitter = new EventEmitter;
  return {
    create: validate.args({
      $address: 'phrase.create',
      opts: {
        title: {},
        uuid: {}
      },
      linkFn: {
        $type: Function,
        $description: "\nThis callback is called immediately upon initialization of the\nphrase root. It receives an event publisher that can be used \nto subscribe to phrase events from the local branch.\n"
      }
    }, function(opts, linkFn) {
      linkFn(context.emitter);
      return function() {
        return context.emitter.emit('phrase::start');
      };
    })
  };
});
