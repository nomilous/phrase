// Generated by CoffeeScript 1.6.3
var EventEmitter, defer;

EventEmitter = require('events').EventEmitter;

defer = require('when').defer;

exports.create = function(root) {
  var context, emitter, graph, inject;
  context = root.context, inject = root.inject;
  graph = context.graph;
  emitter = new EventEmitter;
  emitter.graph = graph;
  emitter.run = function(opts) {
    var running;
    if (opts == null) {
      opts = {};
    }
    running = defer();
    process.nextTick(function() {
      var error;
      if (opts.uuid == null) {
        error = new Error("missing opts.uuid");
        error.code = 1;
        return running.reject(error);
      }
      if (graph.vertices[opts.uuid] == null) {
        error = new Error("uuid: " + opts.uuid + " not in local tree");
        error.code = 2;
        return running.reject(error);
      }
      return running.resolve([]);
    });
    return running.promise;
  };
  Object.defineProperty(emitter, 'eventProxy', {
    enumerable: false,
    get: function() {
      return function(msg, next) {
        if (msg.context.title === 'phrase::recurse:end') {
          emitter.emit('ready');
        }
        return next();
      };
    }
  });
  return emitter;
};
