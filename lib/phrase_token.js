// Generated by CoffeeScript 1.6.3
var EventEmitter, PhraseRunner,
  __slice = [].slice;

EventEmitter = require('events').EventEmitter;

PhraseRunner = require('./phrase/phrase_runner');

exports.create = function(root) {
  var context, emitter, graph, notice;
  context = root.context;
  graph = context.graph, notice = context.notice;
  emitter = new EventEmitter;
  Object.defineProperty(emitter, 'graph', {
    enumerable: false,
    get: function() {
      return context.graph;
    }
  });
  emitter.run = function() {
    var args, token;
    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    token = args[0];
    return PhraseRunner.run(root, token);
  };
  notice.use(function(msg, next) {
    if (msg.context.title === 'phrase::recurse:end') {
      if (msg.walk.first) {
        emitter.emit('ready', {
          walk: msg.walk,
          tokens: msg.tokens
        });
      } else {
        console.log('TODO: changed payload');
        emitter.emit('changed');
      }
    }
    return next();
  });
  return emitter;
};
