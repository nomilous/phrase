// Generated by CoffeeScript 1.6.3
var PhraseHook, afterHooks, beforeHooks, v1;

v1 = require('node-uuid').v1;

exports.PhraseHook = PhraseHook = (function() {
  function PhraseHook(root, fn) {
    this.fn = fn;
    this.uuid = v1();
    this.timeout = 1000;
  }

  return PhraseHook;

})();

beforeHooks = {
  each: [],
  all: []
};

afterHooks = {
  each: [],
  all: []
};

exports.bind = function(root) {
  Object.defineProperty(global, 'before', {
    enumerable: false,
    get: function() {
      return function(opts) {
        if (opts == null) {
          opts = {};
        }
        if (typeof opts.each === 'function') {
          beforeHooks.each.push(new PhraseHook(root, opts.each));
        }
        if (typeof opts.all === 'function') {
          return beforeHooks.all.push(new PhraseHook(root, opts.all));
        }
      };
    }
  });
  Object.defineProperty(global, 'after', {
    enumerable: false,
    get: function() {
      return function(opts) {
        if (opts == null) {
          opts = {};
        }
        if (typeof opts.each === 'function') {
          afterHooks.each.push(new PhraseHook(root, opts.each));
        }
        if (typeof opts.all === 'function') {
          return afterHooks.all.push(new PhraseHook(root, opts.all));
        }
      };
    }
  });
  return {
    beforeAll: beforeHooks.all,
    beforeEach: beforeHooks.each,
    afterEach: afterHooks.each,
    afterAll: afterHooks.all
  };
};
