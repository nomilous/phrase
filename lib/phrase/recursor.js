// Generated by CoffeeScript 1.6.3
var PhraseHooks, RecursorHooks;

RecursorHooks = require('./recursor/hooks');

PhraseHooks = require('./phrase_hooks');

exports.create = function(root, rootControl) {
  var context, inject, notice, recursor, stack;
  context = root.context, inject = root.inject;
  stack = context.stack, notice = context.notice;
  context.hooks = PhraseHooks.bind(root);
  recursor = function(parentPhraseString, parentPhraseControl) {
    var injectionFn, parent, recursionControl;
    parent = {
      control: parentPhraseControl
    };
    recursionControl = RecursorHooks.bind(root, parent);
    injectionFn = inject.async({
      parallel: false,
      beforeAll: recursionControl.beforeAll,
      beforeEach: recursionControl.beforeEach,
      afterEach: recursionControl.afterEach,
      afterAll: recursionControl.afterAll
    }, function(phraseString, phraseControl, nestedPhraseFn) {
      return nestedPhraseFn(recursor(phraseString, phraseControl));
    });
    Object.defineProperty(injectionFn, 'stack', {
      enumarable: false,
      get: function() {
        return stack;
      }
    });
    return injectionFn;
  };
  return recursor('ROOT', {
    phraseToken: {
      name: 'root'
    }
  });
};
