// Generated by CoffeeScript 1.6.3
var PhraseHooks, RecursorHooks;

RecursorHooks = require('./recursor/hooks');

PhraseHooks = require('./phrase_hooks');

exports.walk = function(root, opts, rootString, rootFn) {
  var PhraseGraph, context, graph, inject, injector, notice, recursor, stack;
  context = root.context, inject = root.inject;
  stack = context.stack, notice = context.notice, graph = context.graph, PhraseGraph = context.PhraseGraph;
  context.hooks = PhraseHooks.bind(root);
  if (graph != null) {
    new PhraseGraph;
  } else {
    context.graph = new PhraseGraph;
  }
  recursor = function(parentPhraseString, parentPhraseControl) {
    var injectionFn, recursionControl;
    recursionControl = RecursorHooks.bind(root, parentPhraseControl);
    injectionFn = inject.async({
      parallel: false,
      beforeAll: recursionControl.beforeAll,
      beforeEach: recursionControl.beforeEach,
      afterEach: recursionControl.afterEach,
      afterAll: recursionControl.afterAll
    }, function(phraseString, phraseControl, nestedPhraseFn) {
      return nestedPhraseFn(recursor(phraseString, phraseControl));
    });
    return injectionFn;
  };
  injector = recursor('ROOT', {
    phraseToken: {
      name: opts.title,
      uuid: opts.uuid
    },
    timeout: opts.timeout,
    leaf: opts.leaf
  });
  return injector(rootString, rootFn);
};
